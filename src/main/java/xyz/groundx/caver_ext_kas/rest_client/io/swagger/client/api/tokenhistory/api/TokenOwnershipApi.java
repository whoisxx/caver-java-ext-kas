/*
 * Token History API
 * # Introduction  Token History API는 KLAY, FT (KIP-7, Labeled ERC-20), NFT (KIP-17, Labeled ERC-721) 토큰 정보, 이들 토큰을 주고받은 기록을 조회하는 기능을 제공합니다. 여러분은 특정 EOA가 KLAY를 주고받은 기록을 확인하거나 EOA가 가지고 있는 NFT 정보를 불러오는 등 Token History API를 다양하게 활용할 수 있습니다.   Token History API 사용에 관한 자세한 내용은 [튜토리얼](https://klaytn.com)을 확인하십시오.   이 문서 혹은 KAS에 관한 문의는 [개발자 포럼](https://forum.klaytn.com/)을 방문해 도움을 받으십시오  
 *
 * OpenAPI spec version: 0.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.tokenhistory.api;

import com.google.gson.reflect.TypeToken;
import xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.tokenhistory.model.PageableNftOwnershipChanges;
import xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.*;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TokenOwnershipApi {
    private ApiClient apiClient;

    public TokenOwnershipApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TokenOwnershipApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getListOfNftOwnershipChanges
     * @param xChainId  Klaytn 네트워크 체인 ID (1001 or 8217) (required)
     * @param nftAddress 조회할 NFT 컨트랙트 주소 (required)
     * @param tokenId 조회할 NFT ID (16진수) (required)
     * @param size 응답 아이템 개수(min&#x3D;1, max&#x3D;1000, default&#x3D;100) (optional)
     * @param cursor 특정 위치를 지정하기 위한 오프셋 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getListOfNftOwnershipChangesCall(String xChainId, String nftAddress, String tokenId, Long size, String cursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v2/contract/nft/{nft-address}/token/{token-id}/history"
            .replaceAll("\\{" + "nft-address" + "\\}", apiClient.escapeString(nftAddress.toString()))
            .replaceAll("\\{" + "token-id" + "\\}", apiClient.escapeString(tokenId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("size", size));
        if (cursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("cursor", cursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xChainId != null)
        localVarHeaderParams.put("x-chain-id", apiClient.parameterToString(xChainId));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basic" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getListOfNftOwnershipChangesValidateBeforeCall(String xChainId, String nftAddress, String tokenId, Long size, String cursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'xChainId' is set
        if (xChainId == null) {
            throw new ApiException("Missing the required parameter 'xChainId' when calling getListOfNftOwnershipChanges(Async)");
        }
        // verify the required parameter 'nftAddress' is set
        if (nftAddress == null) {
            throw new ApiException("Missing the required parameter 'nftAddress' when calling getListOfNftOwnershipChanges(Async)");
        }
        // verify the required parameter 'tokenId' is set
        if (tokenId == null) {
            throw new ApiException("Missing the required parameter 'tokenId' when calling getListOfNftOwnershipChanges(Async)");
        }
        
        com.squareup.okhttp.Call call = getListOfNftOwnershipChangesCall(xChainId, nftAddress, tokenId, size, cursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 특정 NFT 소유권 변경 기록 조회
     * 특정 NFT의 소유권 변경 기록을 조회합니다. 
     * @param xChainId  Klaytn 네트워크 체인 ID (1001 or 8217) (required)
     * @param nftAddress 조회할 NFT 컨트랙트 주소 (required)
     * @param tokenId 조회할 NFT ID (16진수) (required)
     * @param size 응답 아이템 개수(min&#x3D;1, max&#x3D;1000, default&#x3D;100) (optional)
     * @param cursor 특정 위치를 지정하기 위한 오프셋 (optional)
     * @return PageableNftOwnershipChanges
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PageableNftOwnershipChanges getListOfNftOwnershipChanges(String xChainId, String nftAddress, String tokenId, Long size, String cursor) throws ApiException {
        ApiResponse<PageableNftOwnershipChanges> resp = getListOfNftOwnershipChangesWithHttpInfo(xChainId, nftAddress, tokenId, size, cursor);
        return resp.getData();
    }

    /**
     * 특정 NFT 소유권 변경 기록 조회
     * 특정 NFT의 소유권 변경 기록을 조회합니다. 
     * @param xChainId  Klaytn 네트워크 체인 ID (1001 or 8217) (required)
     * @param nftAddress 조회할 NFT 컨트랙트 주소 (required)
     * @param tokenId 조회할 NFT ID (16진수) (required)
     * @param size 응답 아이템 개수(min&#x3D;1, max&#x3D;1000, default&#x3D;100) (optional)
     * @param cursor 특정 위치를 지정하기 위한 오프셋 (optional)
     * @return ApiResponse&lt;PageableNftOwnershipChanges&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PageableNftOwnershipChanges> getListOfNftOwnershipChangesWithHttpInfo(String xChainId, String nftAddress, String tokenId, Long size, String cursor) throws ApiException {
        com.squareup.okhttp.Call call = getListOfNftOwnershipChangesValidateBeforeCall(xChainId, nftAddress, tokenId, size, cursor, null, null);
        Type localVarReturnType = new TypeToken<PageableNftOwnershipChanges>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 특정 NFT 소유권 변경 기록 조회 (asynchronously)
     * 특정 NFT의 소유권 변경 기록을 조회합니다. 
     * @param xChainId  Klaytn 네트워크 체인 ID (1001 or 8217) (required)
     * @param nftAddress 조회할 NFT 컨트랙트 주소 (required)
     * @param tokenId 조회할 NFT ID (16진수) (required)
     * @param size 응답 아이템 개수(min&#x3D;1, max&#x3D;1000, default&#x3D;100) (optional)
     * @param cursor 특정 위치를 지정하기 위한 오프셋 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getListOfNftOwnershipChangesAsync(String xChainId, String nftAddress, String tokenId, Long size, String cursor, final ApiCallback<PageableNftOwnershipChanges> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getListOfNftOwnershipChangesValidateBeforeCall(xChainId, nftAddress, tokenId, size, cursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PageableNftOwnershipChanges>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
